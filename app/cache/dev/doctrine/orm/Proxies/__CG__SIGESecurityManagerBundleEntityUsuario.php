<?php

namespace Proxies\__CG__\SIGE\SecurityManagerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Usuario extends \SIGE\SecurityManagerBundle\Entity\Usuario implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'id', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'username', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'password', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'name', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'surname', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'email', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'status', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'updatedOn', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'ldap', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'dn', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'online', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'lastAction', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'authType', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'userProfile', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'ipAddress', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'oldPassword', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'roles', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'permisos');
        }

        return array('__isInitialized__', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'id', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'username', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'password', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'name', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'surname', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'email', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'status', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'updatedOn', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'ldap', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'dn', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'online', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'lastAction', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'authType', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'userProfile', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'ipAddress', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'oldPassword', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'roles', '' . "\0" . 'SIGE\\SecurityManagerBundle\\Entity\\Usuario' . "\0" . 'permisos');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Usuario $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSurname($surname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurname', array($surname));

        return parent::setSurname($surname);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurname', array());

        return parent::getSurname();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedOn($updatedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedOn', array($updatedOn));

        return parent::setUpdatedOn($updatedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedOn', array());

        return parent::getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setLdap(\SIGE\SecurityManagerBundle\Entity\LdapConnections $ldap = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLdap', array($ldap));

        return parent::setLdap($ldap);
    }

    /**
     * {@inheritDoc}
     */
    public function getLdap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLdap', array());

        return parent::getLdap();
    }

    /**
     * {@inheritDoc}
     */
    public function setDn($dn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDn', array($dn));

        return parent::setDn($dn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDn', array());

        return parent::getDn();
    }

    /**
     * {@inheritDoc}
     */
    public function setOnline($online)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnline', array($online));

        return parent::setOnline($online);
    }

    /**
     * {@inheritDoc}
     */
    public function getOnline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnline', array());

        return parent::getOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastAction($lastAction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastAction', array($lastAction));

        return parent::setLastAction($lastAction);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastAction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastAction', array());

        return parent::getLastAction();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthType', array());

        return parent::getAuthType();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserProfile(\SIGE\SecurityManagerBundle\Entity\UserProfile $userProfile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserProfile', array($userProfile));

        return parent::setUserProfile($userProfile);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserProfile', array());

        return parent::getUserProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function getIpAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpAddress', array());

        return parent::getIpAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function addOldPassword(\SIGE\SecurityManagerBundle\Entity\OldPassword $oldPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOldPassword', array($oldPassword));

        return parent::addOldPassword($oldPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOldPassword(\SIGE\SecurityManagerBundle\Entity\OldPassword $oldPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOldPassword', array($oldPassword));

        return parent::removeOldPassword($oldPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getOldPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOldPassword', array());

        return parent::getOldPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function addPermiso(\SIGE\SecurityManagerBundle\Entity\Permiso $permiso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPermiso', array($permiso));

        return parent::addPermiso($permiso);
    }

    /**
     * {@inheritDoc}
     */
    public function removePermiso(\SIGE\SecurityManagerBundle\Entity\Permiso $permiso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePermiso', array($permiso));

        return parent::removePermiso($permiso);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\SIGE\SecurityManagerBundle\Entity\Rol $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($roles));

        return parent::addRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\SIGE\SecurityManagerBundle\Entity\Rol $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($roles));

        return parent::removeRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayRoles', array());

        return parent::getArrayRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getPermisos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPermisos', array());

        return parent::getPermisos();
    }

    /**
     * {@inheritDoc}
     */
    public function addIpAddres(\SIGE\SecurityManagerBundle\Entity\IpAddress $ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIpAddres', array($ipAddress));

        return parent::addIpAddres($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIpAddres(\SIGE\SecurityManagerBundle\Entity\IpAddress $ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIpAddres', array($ipAddress));

        return parent::removeIpAddres($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthType(\SIGE\SecurityManagerBundle\Entity\AuthType $authType = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthType', array($authType));

        return parent::setAuthType($authType);
    }

    /**
     * {@inheritDoc}
     */
    public function hasPermission($resource, $action, $security)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasPermission', array($resource, $action, $security));

        return parent::hasPermission($resource, $action, $security);
    }

}
